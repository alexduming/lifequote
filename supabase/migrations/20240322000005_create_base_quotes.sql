-- 创建基础的 quotes 表（如果不存在）
CREATE TABLE IF NOT EXISTS public.quotes (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    quote_zh TEXT,
    quote_en TEXT,
    author_zh TEXT,
    author_en TEXT,
    author_title_zh TEXT,
    author_title_en TEXT,
    category TEXT,
    source TEXT,
    source_en TEXT,
    likes INTEGER DEFAULT 0,
    status TEXT DEFAULT 'pending' CHECK (status IN ('pending', 'approved', 'rejected')),
    language TEXT DEFAULT 'zh' CHECK (language IN ('zh', 'en')),
    submitted_by UUID REFERENCES auth.users(id),
    reviewed_by UUID REFERENCES auth.users(id),
    reviewed_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- 删除已存在的触发器和函数
DROP TRIGGER IF EXISTS update_quotes_updated_at ON public.quotes;
DROP FUNCTION IF EXISTS update_updated_at_column();

-- 添加更新时间触发器
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = timezone('utc'::text, now());
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_quotes_updated_at
    BEFORE UPDATE ON public.quotes
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- 重新授予权限
GRANT ALL ON public.quotes TO authenticated; 