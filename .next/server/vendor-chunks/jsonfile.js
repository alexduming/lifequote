"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jsonfile";
exports.ids = ["vendor-chunks/jsonfile"];
exports.modules = {

/***/ "(rsc)/./node_modules/jsonfile/index.js":
/*!****************************************!*\
  !*** ./node_modules/jsonfile/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nlet _fs;\ntry {\n    _fs = __webpack_require__(/*! graceful-fs */ \"(rsc)/./node_modules/graceful-fs/graceful-fs.js\");\n} catch (_) {\n    _fs = __webpack_require__(/*! fs */ \"fs\");\n}\nconst universalify = __webpack_require__(/*! universalify */ \"(rsc)/./node_modules/universalify/index.js\");\nconst { stringify, stripBom } = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/jsonfile/utils.js\");\nasync function _readFile(file, options = {}) {\n    if (typeof options === \"string\") {\n        options = {\n            encoding: options\n        };\n    }\n    const fs = options.fs || _fs;\n    const shouldThrow = \"throws\" in options ? options.throws : true;\n    let data = await universalify.fromCallback(fs.readFile)(file, options);\n    data = stripBom(data);\n    let obj;\n    try {\n        obj = JSON.parse(data, options ? options.reviver : null);\n    } catch (err) {\n        if (shouldThrow) {\n            err.message = `${file}: ${err.message}`;\n            throw err;\n        } else {\n            return null;\n        }\n    }\n    return obj;\n}\nconst readFile = universalify.fromPromise(_readFile);\nfunction readFileSync(file, options = {}) {\n    if (typeof options === \"string\") {\n        options = {\n            encoding: options\n        };\n    }\n    const fs = options.fs || _fs;\n    const shouldThrow = \"throws\" in options ? options.throws : true;\n    try {\n        let content = fs.readFileSync(file, options);\n        content = stripBom(content);\n        return JSON.parse(content, options.reviver);\n    } catch (err) {\n        if (shouldThrow) {\n            err.message = `${file}: ${err.message}`;\n            throw err;\n        } else {\n            return null;\n        }\n    }\n}\nasync function _writeFile(file, obj, options = {}) {\n    const fs = options.fs || _fs;\n    const str = stringify(obj, options);\n    await universalify.fromCallback(fs.writeFile)(file, str, options);\n}\nconst writeFile = universalify.fromPromise(_writeFile);\nfunction writeFileSync(file, obj, options = {}) {\n    const fs = options.fs || _fs;\n    const str = stringify(obj, options);\n    // not sure if fs.writeFileSync returns anything, but just in case\n    return fs.writeFileSync(file, str, options);\n}\nconst jsonfile = {\n    readFile,\n    readFileSync,\n    writeFile,\n    writeFileSync\n};\nmodule.exports = jsonfile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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b25maWxlL2luZGV4LmpzP2NjODUiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IF9mc1xudHJ5IHtcbiAgX2ZzID0gcmVxdWlyZSgnZ3JhY2VmdWwtZnMnKVxufSBjYXRjaCAoXykge1xuICBfZnMgPSByZXF1aXJlKCdmcycpXG59XG5jb25zdCB1bml2ZXJzYWxpZnkgPSByZXF1aXJlKCd1bml2ZXJzYWxpZnknKVxuY29uc3QgeyBzdHJpbmdpZnksIHN0cmlwQm9tIH0gPSByZXF1aXJlKCcuL3V0aWxzJylcblxuYXN5bmMgZnVuY3Rpb24gX3JlYWRGaWxlIChmaWxlLCBvcHRpb25zID0ge30pIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykge1xuICAgIG9wdGlvbnMgPSB7IGVuY29kaW5nOiBvcHRpb25zIH1cbiAgfVxuXG4gIGNvbnN0IGZzID0gb3B0aW9ucy5mcyB8fCBfZnNcblxuICBjb25zdCBzaG91bGRUaHJvdyA9ICd0aHJvd3MnIGluIG9wdGlvbnMgPyBvcHRpb25zLnRocm93cyA6IHRydWVcblxuICBsZXQgZGF0YSA9IGF3YWl0IHVuaXZlcnNhbGlmeS5mcm9tQ2FsbGJhY2soZnMucmVhZEZpbGUpKGZpbGUsIG9wdGlvbnMpXG5cbiAgZGF0YSA9IHN0cmlwQm9tKGRhdGEpXG5cbiAgbGV0IG9ialxuICB0cnkge1xuICAgIG9iaiA9IEpTT04ucGFyc2UoZGF0YSwgb3B0aW9ucyA/IG9wdGlvbnMucmV2aXZlciA6IG51bGwpXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChzaG91bGRUaHJvdykge1xuICAgICAgZXJyLm1lc3NhZ2UgPSBgJHtmaWxlfTogJHtlcnIubWVzc2FnZX1gXG4gICAgICB0aHJvdyBlcnJcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG51bGxcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqXG59XG5cbmNvbnN0IHJlYWRGaWxlID0gdW5pdmVyc2FsaWZ5LmZyb21Qcm9taXNlKF9yZWFkRmlsZSlcblxuZnVuY3Rpb24gcmVhZEZpbGVTeW5jIChmaWxlLCBvcHRpb25zID0ge30pIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykge1xuICAgIG9wdGlvbnMgPSB7IGVuY29kaW5nOiBvcHRpb25zIH1cbiAgfVxuXG4gIGNvbnN0IGZzID0gb3B0aW9ucy5mcyB8fCBfZnNcblxuICBjb25zdCBzaG91bGRUaHJvdyA9ICd0aHJvd3MnIGluIG9wdGlvbnMgPyBvcHRpb25zLnRocm93cyA6IHRydWVcblxuICB0cnkge1xuICAgIGxldCBjb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKGZpbGUsIG9wdGlvbnMpXG4gICAgY29udGVudCA9IHN0cmlwQm9tKGNvbnRlbnQpXG4gICAgcmV0dXJuIEpTT04ucGFyc2UoY29udGVudCwgb3B0aW9ucy5yZXZpdmVyKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBpZiAoc2hvdWxkVGhyb3cpIHtcbiAgICAgIGVyci5tZXNzYWdlID0gYCR7ZmlsZX06ICR7ZXJyLm1lc3NhZ2V9YFxuICAgICAgdGhyb3cgZXJyXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIF93cml0ZUZpbGUgKGZpbGUsIG9iaiwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IGZzID0gb3B0aW9ucy5mcyB8fCBfZnNcblxuICBjb25zdCBzdHIgPSBzdHJpbmdpZnkob2JqLCBvcHRpb25zKVxuXG4gIGF3YWl0IHVuaXZlcnNhbGlmeS5mcm9tQ2FsbGJhY2soZnMud3JpdGVGaWxlKShmaWxlLCBzdHIsIG9wdGlvbnMpXG59XG5cbmNvbnN0IHdyaXRlRmlsZSA9IHVuaXZlcnNhbGlmeS5mcm9tUHJvbWlzZShfd3JpdGVGaWxlKVxuXG5mdW5jdGlvbiB3cml0ZUZpbGVTeW5jIChmaWxlLCBvYmosIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBmcyA9IG9wdGlvbnMuZnMgfHwgX2ZzXG5cbiAgY29uc3Qgc3RyID0gc3RyaW5naWZ5KG9iaiwgb3B0aW9ucylcbiAgLy8gbm90IHN1cmUgaWYgZnMud3JpdGVGaWxlU3luYyByZXR1cm5zIGFueXRoaW5nLCBidXQganVzdCBpbiBjYXNlXG4gIHJldHVybiBmcy53cml0ZUZpbGVTeW5jKGZpbGUsIHN0ciwgb3B0aW9ucylcbn1cblxuY29uc3QganNvbmZpbGUgPSB7XG4gIHJlYWRGaWxlLFxuICByZWFkRmlsZVN5bmMsXG4gIHdyaXRlRmlsZSxcbiAgd3JpdGVGaWxlU3luY1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGpzb25maWxlXG4iXSwibmFtZXMiOlsiX2ZzIiwicmVxdWlyZSIsIl8iLCJ1bml2ZXJzYWxpZnkiLCJzdHJpbmdpZnkiLCJzdHJpcEJvbSIsIl9yZWFkRmlsZSIsImZpbGUiLCJvcHRpb25zIiwiZW5jb2RpbmciLCJmcyIsInNob3VsZFRocm93IiwidGhyb3dzIiwiZGF0YSIsImZyb21DYWxsYmFjayIsInJlYWRGaWxlIiwib2JqIiwiSlNPTiIsInBhcnNlIiwicmV2aXZlciIsImVyciIsIm1lc3NhZ2UiLCJmcm9tUHJvbWlzZSIsInJlYWRGaWxlU3luYyIsImNvbnRlbnQiLCJfd3JpdGVGaWxlIiwic3RyIiwid3JpdGVGaWxlIiwid3JpdGVGaWxlU3luYyIsImpzb25maWxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsonfile/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsonfile/utils.js":
/*!****************************************!*\
  !*** ./node_modules/jsonfile/utils.js ***!
  \****************************************/
/***/ ((module) => {

eval("\nfunction stringify(obj, { EOL = \"\\n\", finalEOL = true, replacer = null, spaces } = {}) {\n    const EOF = finalEOL ? EOL : \"\";\n    const str = JSON.stringify(obj, replacer, spaces);\n    return str.replace(/\\n/g, EOL) + EOF;\n}\nfunction stripBom(content) {\n    // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n    if (Buffer.isBuffer(content)) content = content.toString(\"utf8\");\n    return content.replace(/^\\uFEFF/, \"\");\n}\nmodule.exports = {\n    stringify,\n    stripBom\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNvbmZpbGUvdXRpbHMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLFVBQVdDLEdBQUcsRUFBRSxFQUFFQyxNQUFNLElBQUksRUFBRUMsV0FBVyxJQUFJLEVBQUVDLFdBQVcsSUFBSSxFQUFFQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDcEYsTUFBTUMsTUFBTUgsV0FBV0QsTUFBTTtJQUM3QixNQUFNSyxNQUFNQyxLQUFLUixTQUFTLENBQUNDLEtBQUtHLFVBQVVDO0lBRTFDLE9BQU9FLElBQUlFLE9BQU8sQ0FBQyxPQUFPUCxPQUFPSTtBQUNuQztBQUVBLFNBQVNJLFNBQVVDLE9BQU87SUFDeEIsK0ZBQStGO0lBQy9GLElBQUlDLE9BQU9DLFFBQVEsQ0FBQ0YsVUFBVUEsVUFBVUEsUUFBUUcsUUFBUSxDQUFDO0lBQ3pELE9BQU9ILFFBQVFGLE9BQU8sQ0FBQyxXQUFXO0FBQ3BDO0FBRUFNLE9BQU9DLE9BQU8sR0FBRztJQUFFaEI7SUFBV1U7QUFBUyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpZmVxdW90ZS8uL25vZGVfbW9kdWxlcy9qc29uZmlsZS91dGlscy5qcz9mMGNlIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHN0cmluZ2lmeSAob2JqLCB7IEVPTCA9ICdcXG4nLCBmaW5hbEVPTCA9IHRydWUsIHJlcGxhY2VyID0gbnVsbCwgc3BhY2VzIH0gPSB7fSkge1xuICBjb25zdCBFT0YgPSBmaW5hbEVPTCA/IEVPTCA6ICcnXG4gIGNvbnN0IHN0ciA9IEpTT04uc3RyaW5naWZ5KG9iaiwgcmVwbGFjZXIsIHNwYWNlcylcblxuICByZXR1cm4gc3RyLnJlcGxhY2UoL1xcbi9nLCBFT0wpICsgRU9GXG59XG5cbmZ1bmN0aW9uIHN0cmlwQm9tIChjb250ZW50KSB7XG4gIC8vIHdlIGRvIHRoaXMgYmVjYXVzZSBKU09OLnBhcnNlIHdvdWxkIGNvbnZlcnQgaXQgdG8gYSB1dGY4IHN0cmluZyBpZiBlbmNvZGluZyB3YXNuJ3Qgc3BlY2lmaWVkXG4gIGlmIChCdWZmZXIuaXNCdWZmZXIoY29udGVudCkpIGNvbnRlbnQgPSBjb250ZW50LnRvU3RyaW5nKCd1dGY4JylcbiAgcmV0dXJuIGNvbnRlbnQucmVwbGFjZSgvXlxcdUZFRkYvLCAnJylcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7IHN0cmluZ2lmeSwgc3RyaXBCb20gfVxuIl0sIm5hbWVzIjpbInN0cmluZ2lmeSIsIm9iaiIsIkVPTCIsImZpbmFsRU9MIiwicmVwbGFjZXIiLCJzcGFjZXMiLCJFT0YiLCJzdHIiLCJKU09OIiwicmVwbGFjZSIsInN0cmlwQm9tIiwiY29udGVudCIsIkJ1ZmZlciIsImlzQnVmZmVyIiwidG9TdHJpbmciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsonfile/utils.js\n");

/***/ })

};
;